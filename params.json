{"name":"Angular-Selectize","tagline":"An Angular Directive for Brian Reavis' Selectize","body":"### Angular-Selectize is an Angular version of Brian Reavis' [Selectize](http://brianreavis.github.io/selectize.js/). From the Selectize website: \r\n> Selectize is the hybrid of a textbox and <select> box. It's jQuery-based and it's useful for tagging, contact lists, country selectors, and so on.\r\n\r\n# Try the [Demos](http://plnkr.co/edit/pc3eT8?p=preview)\r\n\r\n![selectize](https://cloud.githubusercontent.com/assets/4087667/5509244/dc6c4526-876a-11e4-8bf2-0edf33091147.png)\r\n\r\n## Angular Features\r\n\r\n* Model bindings\r\n* Form bindings\r\n* Option bindings\r\n\r\n## Original Selectize Features\r\n* Skinnable — Comes with LESS stylesheets and shims for Bootstrap 2 and Bootstrap 3 (+ precompiled CSS).\r\n* Clean API & Code + Extensible — Interface & make addons like a boss with the plugin system. Fully documented on GitHub & inline.\r\n* Smart Ranking / Multi-Property Searching & Sorting — Want to search an item's title and description? No problem. You can even override the scoring function used for sorting if you want to get crazy. Uses sifter.js.\r\n* Caret Between Items — Order matters sometimes. Use the left and right arrow keys to move between items.\r\n* Select & Delete multiple items at once — Hold down option on Mac or ctrl on Windows to select more than one item to delete.\r\n* RTL + Díåcritîçs supported — Great for international environments.\r\n* Item Creation — Allow users to create items on the fly (and it's async friendly; the control locks until you invoke a callback).\r\n* Remote Data Loading — For when you have thousands of options and want them provided by the server as the user types.\r\n\r\n\r\n## Requirements\r\n\r\n- [AngularJS](http://angularjs.org/)\r\n- [JQuery](http://jquery.com/)\r\n- [Selectize](http://brianreavis.github.io/selectize.js/)\r\n\r\n## Install\r\n\r\nWe use [bower](https://github.com/bower/bower) for dependency management. Install Angular-selectize into your project by running the command\r\n\r\n`$ bower install angular-selectize2`\r\n\r\nIf you use a `bower.json` file in your project, you can have Bower save angular-selectize2 as a dependency by passing the `--save` or `--save-dev` flag with the above command.\r\n\r\nThis will copy the angular-selectize2 files into your `bower_components` folder, along with its dependencies. Load the script files in your application:\r\n```html\r\n<link rel=\"stylesheet\" href=\"bower_components/selectize/dist/css/selectize.default.css \">\r\n<script type=\"text/javascript\" src=\"bower_components/jquery/jquery.js\"></script>\r\n<script type=\"text/javascript\" src=\"bower_components/selectize/dist/js/standalone/selectize.min.js\"></script>\r\n<script type=\"text/javascript\" src=\"bower_components/angular/angular.js\"></script>\r\n<script type=\"text/javascript\" src=\"bower_components/angular-selectize2/dist/selectize.js\"></script>\r\n```\r\n\r\n(Note that `jquery` must be loaded before `angular` so that it doesn't use `jqLite` internally)\r\n\r\n\r\nAdd the selectize module as a dependency to your application module:\r\n\r\n```javascript\r\nvar myAppModule = angular.module('MyApp', ['selectize']);\r\n```\r\n## Usage\r\nSetup your controller variables:\r\n\r\n```javascript\r\n$scope.myModel = 1;\r\n\r\n$scope.myOptions = [\r\n  {id: 1, title: 'Spectrometer'},\r\n  {id: 2, title: 'Star Chart'},\r\n  {id: 3, title: 'Laser Pointer'}\r\n];\r\n\r\n$scope.config = {\r\n  create: true,\r\n  valueField: 'id',\r\n  labelField: 'title',\r\n  delimiter: '|',\r\n  placeholder: 'Pick something'\r\n  // maxItems: 1\r\n}\r\n```\r\n\r\nAdd the select element to your view template:\r\n\r\n```html\r\n<div selectize=\"config\" options='myOptions' ng-model=\"myModel\"></div>\r\n```\r\n\r\n##Config\r\nTheoretically, all of the config options from the original selectize should work. But I have not been able to test them all.\r\n\r\n- [Selectize config options](https://github.com/brianreavis/selectize.js/blob/master/docs/usage.md)\r\n- [Selectize API](https://github.com/brianreavis/selectize.js/blob/master/docs/api.md)\r\n\r\n\r\n### Inline Config\r\n\r\n```html\r\n<div selectize=\"{create:true, maxItems:10}\" options='myOptions' ng-model=\"myModel\"></div>\r\n```\r\n\r\n### Tag editor\r\n\r\n```javascript\r\n$scope.myModel = 1;\r\n\r\n$scope.myOptions = [\r\n  {value: 1, text: 'Spectrometer'},\r\n  {value: 2, text: 'Star Chart'},\r\n  {value: 3, text: 'Laser Pointer'}\r\n];\r\n\r\n$scope.config = {\r\n  create: true\r\n}\r\n```\r\n\r\n##Global Defaults\r\nTo define global defaults, you can configure the `selectize` injectable:\r\n\r\n```javascript\r\nMyApp.value('selectizeConfig', {\r\n  delimiter: '|'\r\n});\r\n```","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}